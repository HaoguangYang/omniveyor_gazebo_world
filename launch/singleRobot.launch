<launch>
<arg name="robot_name" default=""/>
<arg name="x" default="0.0"/>
<arg name="y" default="0.0"/>
<param name="/use_sim_time" value="true" />

<group ns="/$(arg robot_name)">
  <param name="tf_prefix" value="$(arg robot_name)" />
  
  <param name="robot_description"
    command="$(find xacro)/xacro --inorder '$(find omniveyor_common)/urdf/omniveyor.urdf.xacro' gazebo:=true gpu_ray_tracing:=false" />
  
  <group if="$(eval robot_name != '')">
    <!-- You can spawn multiple robots now. use groups to isolate topics. Use x, y arguments to change birth position. use -model to change model name (may be used to prefix topics) -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
      args="-urdf -model $(arg robot_name) -x $(arg x) -y $(arg y) -param robot_description -robot_namespace $(arg robot_name)"/>
    <node pkg="tf2_ros" type="static_transform_publisher" name="global_world_link_tf" args="$(arg x) $(arg y) 0 0 0 0 world $(arg robot_name)/odom"/>
    <node pkg="tf2_ros" type="static_transform_publisher" name="cam_t1_odom_link" args="-$(arg x) -$(arg y) 0 0 0 0 $(arg robot_name)/odom $(arg robot_name)/cam_t1_odom_frame"/>
    <node pkg="tf2_ros" type="static_transform_publisher" name="local_world_link_tf" args="-$(arg x) -$(arg y) 0 0 0 0 $(arg robot_name)/odom $(arg robot_name)/world"/>
  </group>
  <group unless="$(eval robot_name != '')">
    <!-- You can spawn multiple robots now. use groups to isolate topics. Use x, y arguments to change birth position. use -model to change model name (may be used to prefix topics) -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
      args="-urdf -model omniveyor -x $(arg x) -y $(arg y) -param robot_description -robot_namespace /"/>
    <node pkg="tf2_ros" type="static_transform_publisher" name="cam_t1_odom_link" args="0 0 0 0 0 0 odom cam_t1_odom_frame"/>
    <node pkg="tf2_ros" type="static_transform_publisher" name="world_link_tf" args="0 0 0 0 0 0 odom world"/>
  </group>

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
  
  <node pkg="imu_filter_madgwick" type="imu_filter_node" name="imu_filter">
    <param name="use_mag"               value="false"/>
    <param name="publish_tf"            value="false"/>
    <param name="world_frame"           value="enu"/>
    <remap from="imu/data_raw"         to="cam_t1/imu"/>
    <remap from="imu/data"             to="cam_t1/imu/filtered"/>
  </node>
  
  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_odom" clear_params="true">
    <rosparam command="load" file="$(find pcv_base)/resources/cfg/ekf_odom.yaml" />
    <remap from="odometry/filtered" to="odom/filtered"/>
    <!--  Placeholder for output topic remapping
    <remap from="accel/filtered" to=""/>
    -->
  </node>
  
  <group ns="cam_d1/color/image_raw/" >
    <rosparam param="disable_pub_plugins">
        - 'image_transport/compressedDepth'
        - 'image_transport/compressed'
        - 'image_transport/theora'
    </rosparam>
  </group>
  <group ns="cam_d1/infra1/image_raw/" >
    <rosparam param="disable_pub_plugins">
        - 'image_transport/compressedDepth'
        - 'image_transport/compressed'
        - 'image_transport/theora'
    </rosparam>
  </group>
  <group ns="cam_d1/infra2/image_raw/" >
    <rosparam param="disable_pub_plugins">
        - 'image_transport/compressedDepth'
        - 'image_transport/compressed'
        - 'image_transport/theora'
    </rosparam>
  </group>
  <group ns="cam_d1/depth/image_rect_raw/" >
    <rosparam param="disable_pub_plugins">
        - 'image_transport/compressedDepth'
        - 'image_transport/compressed'
        - 'image_transport/theora'
    </rosparam>
  </group>
  <group ns="cam_d1/aligned_depth_to_color/image_raw/" >
    <rosparam param="disable_pub_plugins">
        - 'image_transport/compressedDepth'
        - 'image_transport/compressed'
        - 'image_transport/theora'
    </rosparam>
  </group>
  
  <group ns="cam_d2/color/image_raw/" >
    <rosparam param="disable_pub_plugins">
        - 'image_transport/compressedDepth'
        - 'image_transport/compressed'
        - 'image_transport/theora'
    </rosparam>
  </group>
  <group ns="cam_d2/infra1/image_raw/" >
    <rosparam param="disable_pub_plugins">
        - 'image_transport/compressedDepth'
        - 'image_transport/compressed'
        - 'image_transport/theora'
    </rosparam>
  </group>
  <group ns="cam_d2/infra2/image_raw/" >
    <rosparam param="disable_pub_plugins">
        - 'image_transport/compressedDepth'
        - 'image_transport/compressed'
        - 'image_transport/theora'
    </rosparam>
  </group>
  <group ns="cam_d2/depth/image_rect_raw/" >
    <rosparam param="disable_pub_plugins">
        - 'image_transport/compressedDepth'
        - 'image_transport/compressed'
        - 'image_transport/theora'
    </rosparam>
  </group>
  <group ns="cam_d2/aligned_depth_to_color/image_raw/" >
    <rosparam param="disable_pub_plugins">
        - 'image_transport/compressedDepth'
        - 'image_transport/compressed'
        - 'image_transport/theora'
    </rosparam>
  </group>
  
  <group ns="cam_t1/fisheye1/image_raw/" >
    <rosparam param="disable_pub_plugins">
        - 'image_transport/compressedDepth'
        - 'image_transport/compressed'
        - 'image_transport/theora'
    </rosparam>
  </group>
  <group ns="cam_t1/fisheye2/image_raw/" >
    <rosparam param="disable_pub_plugins">
        - 'image_transport/compressedDepth'
        - 'image_transport/compressed'
        - 'image_transport/theora'
    </rosparam>
  </group>
</group>

</launch>
